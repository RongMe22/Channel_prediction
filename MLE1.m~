function parameter = MLE1 (X, theta, freq, M, lambda,d)
% X: Mx1 vector;
% theta: 1x3 vector;

N = 1;
%N is the number of samples in the freq domain;
parameter = zeros(1,3);
max_z = 0;
a_angle = theta(1,2);

% argmax delay;

c = zeros(1,M);

for k = 1:M
    c(k) = exp((1i)*(2*pi/lambda)*cos(a_angle)*d*(k-1)); 
end

for delay = 1:50
    d = delay/e()
    g = exp(-(1i)*(2*pi)*delay*freq);
    z = c*X*g;
    if (abs(z) > max_z)
        max_z = abs(z);
        parameter(1,3) = delay;
    end 
end

% argmax azimuth angle;

delay = parameter(1,3);
g = exp(-(1i)*(2*pi)*delay*freq);

max_z = 0;

c = zeros(1,M);

for angle = 0:pi/360:pi
    
    for k = 1:M
        c(k) = exp((1i)*(2*pi/lambda)*cos(angle)*d*(k-1)); 
    end
    
    z = c*X*g;
    
    if (abs(z) > max_z)
        max_z = abs(z);
        parameter(1,2) = theta;
    end    
end

% compute the amplitude;
c = zeros(1,M);

for k = 1:M
    c(k) = exp((1i)*(2*pi/lambda)*cos(parameter(1,2))*d*(k-1)); 
end

g = exp(-(1i)*(2*pi)*parameter(1,3)*freq);
z = c*X*g;

parameter(1,1) = (1/(M*N))*z;


end